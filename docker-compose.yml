services:
  # Frontend React Application
  frontend:
    build:
      context: ./frontend-app
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://backend:5000
    depends_on:
      - backend
    networks:
      - fullstack-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`) && PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  # Backend Flask API
  backend:
    build:
      context: ./backend-app
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=mysql://wordpress:wordpress@mysql:3306/wordpress
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - mysql
      - redis
    networks:
      - fullstack-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.services.backend.loadbalancer.server.port=5000"

  # MySQL Database
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - fullstack-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # WordPress CMS
  wordpress:
    image: wordpress:latest
    environment:
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
    volumes:
      - wordpress_data:/var/www/html
    depends_on:
      - mysql
    networks:
      - fullstack-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wordpress.rule=Host(`localhost`) && PathPrefix(`/wp`)"
      - "traefik.http.services.wordpress.loadbalancer.server.port=80"

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fullstack-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Traefik Reverse Proxy
  traefik:
    image: traefik:v3.0
    ports:
      - "80:80"
      - "8081:8080"  # Dashboard
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=INFO"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - fullstack-network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
  wordpress_data:
    driver: local
  redis_data:
    driver: local

networks:
  fullstack-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16