services:
  # Frontend Development
  frontend-dev:
    build:
      context: ./frontend-app
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:5000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend-app:/app
      - /app/node_modules
    networks:
      - dev-network
    restart: unless-stopped

  # Backend Development
  backend-dev:
    build:
      context: ./backend-app
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DATABASE_URL=mysql://dev:dev@mysql-dev:3306/devdb
    volumes:
      - ./backend-app:/app
    depends_on:
      - mysql-dev
    networks:
      - dev-network
    restart: unless-stopped

  # MySQL Development
  mysql-dev:
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: devroot
      MYSQL_DATABASE: devdb
      MYSQL_USER: dev
      MYSQL_PASSWORD: dev
    volumes:
      - mysql_dev_data:/var/lib/mysql
    networks:
      - dev-network
    restart: unless-stopped

  # Redis Development
  redis-dev:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    networks:
      - dev-network
    restart: unless-stopped

  # MailHog (pour tester les emails en dev)
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - dev-network
    restart: unless-stopped

volumes:
  mysql_dev_data:
    driver: local

networks:
  dev-network:
    driver: bridge